#!/usr/bin/env bash

# bin/compile <build-dir> <cache-dir> <env-dir>

# fail hard
set -o pipefail
# fail harder
set -eu
# move hidden files too, just in case
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

STACK=${STACK:-cedar-14} # Anvil has none
BUILD_DIR=$1
CACHE_DIR=$2/php
mkdir -p "$CACHE_DIR"
ENV_DIR=${3:-} # Anvil has none
BP_DIR=$(cd $(dirname $0); cd ..; pwd)


TOR_VERSION=0.2.9.8
TOR_SRC_URL="https://dist.torproject.org/tor-${TOR_VERSION}.tar.gz"

wget -q $TOR_SRC_URL

if ! [ $? ]; then
    echo "FAILED to obtain tor src" | indent
    exit 1
fi

## TODO: Need to figure out how to verify properly.
# TOR_SRC_SIG=${TOR_SRC_URL}.asc
# wget -q $TOR_SRC_SIG
# if ! [ $? ]; then
#     echo "FAILED to obtain tor src signature file" | indent
#     exit 1
# fi

# # Receive the Tor signers key
# gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-keys 0x4E2C6E8793298290
# if ! [ $? ]; then
#     echo "FAILED to recv key for signature verification" | indent
#     exit 1
# fi

# gpg --verify $BUILD_DIR/tor-*.tar.gz{.asc,} | grep "Good signature"
# if ! [ $? ]; then
#     echo "FAILED to verify integrity of downloaded tarball. Aborting!!!!" | indent
#     exit 1
# fi
mkdir -p $BUILD_DIR/.heroku/tor
# Finally do some compilation.
tar -zxf tor-*.tar.gz
rm tor-*.tar.gz
cd tor-*
./configure --prefix=$BUILD_DIR/.heroku/tor > /dev/null 2>&1
if ! [ $? ]; then
    echo "FAILED to configure for compliation" | indent
    exit 1
fi

make install > /dev/null 2>&1
if ! [ $? ]; then
    echo "FAILED to run make install" | indent
fi
rm -rf tor-*

# Install bitcoin core
wget https://bitcoin.org/bin/bitcoin-core-0.13.2/bitcoin-0.13.2.tar.gz # or 32bit
tar xzf bitcoin-0.13.2.tar.gz
cd bitcoin-0.13.2
cp -af bin/. .heroku/php/bin/
rm -rf bitcoin-*

# Cache builds to avoid unnecessary wait times.
echo $TOR_SRC_URL > $CACHE_DIR/.src-dist

# create tmptorrc take hostname and host.onion
ln -s -f ../../tor/bin/tor /app/.heroku/php/bin/tor
ln -s -f ../../tor/bin/torify /app/.heroku/php/bin/torify
ln -s -f ../../tor/bin/tor-resolve /app/.heroku/php/bin/tor-resolve
ln -s -f ../../tor/bin/tor-gencert /app/.heroku/php/bin/tor-gencert

echo "-----> Finished installing tor" | indent

cat > $BUILD_DIR/.heroku/tor/bin/hide <<EOF
#!/usr/bin/env bash
mkdir -p "${HOME}/hidden_service"
echo "Setting up hidden service" | indent
cat > ${HOME}/hidden_service/private_key <<EPK
\${HIDDEN_PRIVATE_KEY}
EPK
echo \${HIDDEN_DOT_ONION} > ${HOME}/hidden_service/hostname

echo "HiddenServiceDir ${HOME}/hidden_service/" > $HOME/tor/torrc
echo "HiddenServicePort 80 127.0.0.1:\${PORT}" >> $HOME/tor/torrc

# Use -f to be safe here.
tor -f $HOME/tor/torrc &
exec \$*
EOF

chmod a+x $BUILD_DIR/.heroku/tor/bin/hide
ln -s -f ../../tor/bin/hide /app/.heroku/php/bin/hide
touch /app/application/config/database.php && chmod 777 /app/application/config/database.php
touch /app/application/config/bitcoin.php && chmod 777 /app/application/config/bitcoin.php
touch /app/application/config/config.php && chmod 777 /app/application/config/config.php
cp htaccess.sample .htaccess

echo "-----> tor shell succesd" | indent
